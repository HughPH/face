
▎Running benchmark 'JSON' ┃ T >= 3000ms ┃ 15/08/2020

┏━ basic example test:
┣#1   | Face.Json   | 430,987.520/s
┣#2   | Utf8Json    | 392,711.654/s
┣#3   | Newtonsoft  | 202,301.639/s
┣#4   | System.Text | 126,113.070/s

┏━ 190b ━ appsettings.json:
┣#1   | Face.Json   | 288,605.618/s
┣#2   | Utf8Json    | 277,877.240/s
┣#3   | Newtonsoft  | 120,855.276/s
┣#4   | System.Text | 119,133.559/s

┏━ 15kb ━ one long string:
┣#1   | System.Text | 56,000.658/s
┣#2   | Face.Json   | 22,176.562/s
┣#3   | Newtonsoft  | 20,995.212/s
┣#4   | Utf8Json    | 19,150.428/s

┏━ 6kb ━ many short strings:
┣#1   | System.Text | 6,310.437/s
┣#2   | Utf8Json    | 6,145.441/s
┣#3   | Face.Json   | 5,769.778/s
┣#4   | Newtonsoft  | 2,758.610/s

┏━ 6kb ━ flat int array:
┣#1   | System.Text | 2,666.916/s
┣#2   | Face.Json   | 1,908.476/s
┣#3   | Utf8Json    | 1,610.625/s
┣#4   | Newtonsoft  | 1,268.087/s

┏━ 5kb ━ flat float array:
┣#1   | System.Text | 10,047.781/s
┣#2   | Utf8Json    | 6,798.768/s
┣#3   | Face.Json   | 6,036.309/s
┣#4   | Newtonsoft  | 4,261.262/s

┏━ 9kb ━ array of empty arrays:
┣#1   | Face.Json   | 4,443.855/s
┣#2   | Utf8Json    | 3,751.807/s
┣#3   | System.Text | 1,312.342/s
┣#4   | Newtonsoft  | 1,043.594/s

┏━ 806b ━ array of bools and nulls:
┣#1   | Utf8Json    | 94,321.764/s
┣#2   | Face.Json   | 80,631.629/s
┣#3   | System.Text | 41,897.949/s
┣#4   | Newtonsoft  | 29,384.852/s

┏━ 8kb ━ array of empty objects:
┣#1   | Utf8Json    | 1,977.876/s
┣#2   | Face.Json   | 1,813.706/s
┣#3   | System.Text | 1,358.760/s
┣#4   | Newtonsoft  | 1,028.384/s

┏━ 7kb ━ array of small objects:
┣#1   | System.Text | 2,390.025/s
┣#2   | Utf8Json    | 2,246.551/s
┣#3   | Face.Json   | 2,027.946/s
┣#4   | Newtonsoft  | 1,018.152/s

┏━ 8kb ━ flat mixed array:
┣#1   | Utf8Json    | 3,446.891/s
┣#2   | System.Text | 3,413.448/s
┣#3   | Face.Json   | 3,313.765/s
┣#4   | Newtonsoft  | 1,696.972/s

┏━ 1001b ━ much whitespace:
┣#1   | Face.Json   | 61,943.628/s
┣#2   | Utf8Json    | 50,552.879/s
┣#3   | System.Text | 44,008.059/s
┣#4   | Newtonsoft  | 38,067.384/s

┏━ 330b ━ generic data:
┣#1   | Face.Json   | 124,259.188/s
┣#2   | Utf8Json    | 123,809.386/s
┣#3   | System.Text | 68,855.637/s
┣#4   | Newtonsoft  | 48,300.200/s

┏━ 569kb ━ generated test data:
┣#1   | System.Text | 157.895/s
┣#2   | Utf8Json    | 138.313/s
┣#3   | Face.Json   | 131.473/s
┣#4   | Newtonsoft  | 72.300/s

┏━ 25mb ━ github event log:
┣#1   | System.Text | 3.810/s
┣#2   | Utf8Json    | 3.106/s
┣#3   | Face.Json   | 2.355/s
┣#4   | Newtonsoft  | 1.525/s

┏━ 181mb ━ street data:
┣#1   | System.Text | 0.247/s
┣#2   | Utf8Json    | 0.219/s
┣#3   | Face.Json   | 0.096/s
┣#4   | Newtonsoft  | 0.064/s

┏━ 36b ━ "truE":
┣#N/A | Utf8Json    | JsonParsingException: expected:'true', actual:'true', at offset:19
┣#N/A | System.Text | JsonException: 'truE,
  4,
  5,
]' is an invalid JSON literal. Expected the literal 'true'. Path: $ | LineNumber: 4 | BytePositionInLine: 5. → JsonReaderException: 'truE,
  4,
  5,
]' is an invalid JSON literal. Expected the literal 'true'. LineNumber: 4 | BytePositionInLine: 5.
┣#N/A | Newtonsoft  | JsonReaderException: Error parsing boolean value. Path '[2]', line 5, position 5.
┣#N/A | Face.Json   | ParseError: Expected value, found 'truE' at `[3]`, input position 19 (line 5)

┏━ 19b ━ unclosed array:
┣#N/A | Utf8Json    | IndexOutOfRangeException: Index was outside the bounds of the array.
┣#N/A | System.Text | JsonException: Expected depth to be zero at the end of the JSON payload. There is an open JSON object or array that should be closed. Path: $ | LineNumber: 0 | BytePositionInLine: 19. → JsonReaderException: Expected depth to be zero at the end of the JSON payload. There is an open JSON object or array that should be closed. LineNumber: 0 | BytePositionInLine: 19.
┣#N/A | Newtonsoft  | JsonWriterException: Unexpected end when reading token. Path '[3]'.
┣#N/A | Face.Json   | ParseError: Past end of input at `[3][0]`

┏━ 35b ━ bad object:
┣#N/A | Utf8Json    | InvalidOperationException: Invalid Json Token:EndObject
┣#N/A | System.Text | JsonException: '}' is an invalid start of a value. Path: $ | LineNumber: 3 | BytePositionInLine: 0. → JsonReaderException: '}' is an invalid start of a value. LineNumber: 3 | BytePositionInLine: 0.
┣#N/A | Newtonsoft  | JsonReaderException: Unexpected character encountered while parsing value: }. Path 'hello', line 4, position 0.
┣#N/A | Face.Json   | ParseError: Expected value, past end of input at `hello`

┏━ 20b ━ extra '"':
┣#N/A | Utf8Json    | JsonParsingException: expected:',', actual:'"', at offset:17
┣#N/A | System.Text | JsonException: '"' is invalid after a value. Expected either ',', '}', or ']'. Path: $ | LineNumber: 1 | BytePositionInLine: 15. → JsonReaderException: '"' is invalid after a value. Expected either ',', '}', or ']'. LineNumber: 1 | BytePositionInLine: 15.
┣#N/A | Newtonsoft  | JsonReaderException: After parsing a value an unexpected character was encountered: ". Path 'name', line 2, position 15.
┣#N/A | Face.Json   | ParseError: Expected ',' or '}' following value, found '"' at `name`, input position 17 (line 2)

┏━ 199b ━ nested error:
┣#N/A | Utf8Json    | JsonParsingException: Invalid Characterz
┣#N/A | System.Text | JsonException: 'z' is not a hex digit following '\u' within a JSON string. The string should be correctly escaped. Path: $ | LineNumber: 11 | BytePositionInLine: 28. → JsonReaderException: 'z' is not a hex digit following '\u' within a JSON string. The string should be correctly escaped. LineNumber: 11 | BytePositionInLine: 28.
┣#N/A | Newtonsoft  | JsonReaderException: Invalid Unicode escape sequence: \u123z. Path 'things[1].polygon[1]['bad y']', line 12, position 25.
┣#N/A | Face.Json   | ParseError: Invalid \u sequence '123z' at `things[1].polygon[1]{"bad y"}`, input position 161 (line 12)

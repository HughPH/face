
▎Running benchmark 'JSON' ┃ T >= 3000ms ┃ 15/08/2020

┏━ basic example test:
┣#1   | Face.Json   | 408,109.959/s
┣#2   | Utf8Json    | 399,218.530/s
┣#3   | Newtonsoft  | 194,426.307/s
┣#4   | System.Text | 128,526.430/s

┏━ 190b ━ appsettings.json:
┣#1   | Face.Json   | 289,893.613/s
┣#2   | Utf8Json    | 275,220.612/s
┣#3   | System.Text | 117,612.573/s
┣#4   | Newtonsoft  | 111,447.680/s

┏━ 15kb ━ one long string:
┣#1   | System.Text | 56,423.093/s
┣#2   | Face.Json   | 21,538.411/s
┣#3   | Newtonsoft  | 20,089.763/s
┣#4   | Utf8Json    | 19,072.320/s

┏━ 6kb ━ many short strings:
┣#1   | System.Text | 6,307.003/s
┣#2   | Utf8Json    | 5,867.397/s
┣#3   | Face.Json   | 5,426.246/s
┣#4   | Newtonsoft  | 2,745.834/s

┏━ 6kb ━ flat int array:
┣#1   | System.Text | 2,659.854/s
┣#2   | Face.Json   | 1,641.816/s
┣#3   | Utf8Json    | 1,610.169/s
┣#4   | Newtonsoft  | 1,257.173/s

┏━ 5kb ━ flat float array:
┣#1   | System.Text | 10,299.430/s
┣#2   | Utf8Json    | 6,945.743/s
┣#3   | Face.Json   | 5,545.503/s
┣#4   | Newtonsoft  | 4,040.788/s

┏━ 9kb ━ array of empty arrays:
┣#1   | Face.Json   | 4,441.534/s
┣#2   | Utf8Json    | 3,720.493/s
┣#3   | System.Text | 1,310.866/s
┣#4   | Newtonsoft  | 901.623/s

┏━ 806b ━ array of bools and nulls:
┣#1   | Utf8Json    | 92,556.593/s
┣#2   | Face.Json   | 63,042.840/s
┣#3   | System.Text | 42,933.158/s
┣#4   | Newtonsoft  | 28,144.270/s

┏━ 8kb ━ array of empty objects:
┣#1   | Utf8Json    | 2,051.204/s
┣#2   | Face.Json   | 1,668.617/s
┣#3   | System.Text | 1,386.351/s
┣#4   | Newtonsoft  | 916.296/s

┏━ 7kb ━ array of small objects:
┣#1   | System.Text | 2,366.278/s
┣#2   | Utf8Json    | 2,197.316/s
┣#3   | Face.Json   | 1,941.261/s
┣#4   | Newtonsoft  | 904.370/s

┏━ 8kb ━ flat mixed array:
┣#1   | Utf8Json    | 3,618.991/s
┣#2   | System.Text | 3,467.872/s
┣#3   | Face.Json   | 3,072.280/s
┣#4   | Newtonsoft  | 1,601.268/s

┏━ 1001b ━ much whitespace:
┣#1   | Face.Json   | 52,616.888/s
┣#2   | Utf8Json    | 50,592.229/s
┣#3   | System.Text | 44,699.026/s
┣#4   | Newtonsoft  | 37,707.601/s

┏━ 330b ━ generic data:
┣#1   | Utf8Json    | 123,796.580/s
┣#2   | Face.Json   | 122,537.792/s
┣#3   | System.Text | 70,223.184/s
┣#4   | Newtonsoft  | 44,473.527/s

┏━ 569kb ━ generated test data:
┣#1   | System.Text | 155.957/s
┣#2   | Utf8Json    | 139.495/s
┣#3   | Face.Json   | 135.642/s
┣#4   | Newtonsoft  | 67.626/s

┏━ 25mb ━ github event log:
┣#1   | System.Text | 3.827/s
┣#2   | Utf8Json    | 3.182/s
┣#3   | Face.Json   | 2.069/s
┣#4   | Newtonsoft  | 1.407/s

┏━ 181mb ━ street data:
┣#1   | System.Text | 0.247/s
┣#2   | Utf8Json    | 0.230/s
┣#3   | Face.Json   | 0.091/s
┣#4   | Newtonsoft  | 0.064/s

┏━ 36b ━ "truE":
┣#N/A | Utf8Json    | JsonParsingException: expected:'true', actual:'true', at offset:19
┣#N/A | System.Text | JsonException: 'truE,
  4,
  5,
]' is an invalid JSON literal. Expected the literal 'true'. Path: $ | LineNumber: 4 | BytePositionInLine: 5. → JsonReaderException: 'truE,
  4,
  5,
]' is an invalid JSON literal. Expected the literal 'true'. LineNumber: 4 | BytePositionInLine: 5.
┣#N/A | Newtonsoft  | JsonReaderException: Error parsing boolean value. Path '[2]', line 5, position 5.
┣#N/A | Face.Json   | ParseError: Expected value, found 'truE' at `[3]`, input position 19 (line 5)

┏━ 19b ━ unclosed array:
┣#N/A | Utf8Json    | IndexOutOfRangeException: Index was outside the bounds of the array.
┣#N/A | System.Text | JsonException: Expected depth to be zero at the end of the JSON payload. There is an open JSON object or array that should be closed. Path: $ | LineNumber: 0 | BytePositionInLine: 19. → JsonReaderException: Expected depth to be zero at the end of the JSON payload. There is an open JSON object or array that should be closed. LineNumber: 0 | BytePositionInLine: 19.
┣#N/A | Newtonsoft  | JsonWriterException: Unexpected end when reading token. Path '[3]'.
┣#N/A | Face.Json   | ParseError: Past end of input at `[3][0]`

┏━ 35b ━ bad object:
┣#N/A | Utf8Json    | InvalidOperationException: Invalid Json Token:EndObject
┣#N/A | System.Text | JsonException: '}' is an invalid start of a value. Path: $ | LineNumber: 3 | BytePositionInLine: 0. → JsonReaderException: '}' is an invalid start of a value. LineNumber: 3 | BytePositionInLine: 0.
┣#N/A | Newtonsoft  | JsonReaderException: Unexpected character encountered while parsing value: }. Path 'hello', line 4, position 0.
┣#N/A | Face.Json   | ParseError: Expected value, found '}' at `hello`, input position 34 (line 4)

┏━ 20b ━ extra '"':
┣#N/A | Utf8Json    | JsonParsingException: expected:',', actual:'"', at offset:17
┣#N/A | System.Text | JsonException: '"' is invalid after a value. Expected either ',', '}', or ']'. Path: $ | LineNumber: 1 | BytePositionInLine: 15. → JsonReaderException: '"' is invalid after a value. Expected either ',', '}', or ']'. LineNumber: 1 | BytePositionInLine: 15.
┣#N/A | Newtonsoft  | JsonReaderException: After parsing a value an unexpected character was encountered: ". Path 'name', line 2, position 15.
┣#N/A | Face.Json   | ParseError: Expected ',' or '}' following value, found '"' at `name`, input position 17 (line 2)

┏━ 199b ━ nested error:
┣#N/A | Utf8Json    | JsonParsingException: Invalid Characterz
┣#N/A | System.Text | JsonException: 'z' is not a hex digit following '\u' within a JSON string. The string should be correctly escaped. Path: $ | LineNumber: 11 | BytePositionInLine: 28. → JsonReaderException: 'z' is not a hex digit following '\u' within a JSON string. The string should be correctly escaped. LineNumber: 11 | BytePositionInLine: 28.
┣#N/A | Newtonsoft  | JsonReaderException: Invalid Unicode escape sequence: \u123z. Path 'things[1].polygon[1]['bad y']', line 12, position 25.
┣#N/A | Face.Json   | ParseError: Invalid \u sequence '123z' at `things[1].polygon[1]{"bad y"}`, input position 161 (line 12)
